// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commands.proto

#include "commands.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_commands_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Authentication_commands_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commands_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthenticationData_commands_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commands_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthorizationRequest_commands_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commands_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FirewallDefaults_commands_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fempty_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_google_2fprotobuf_2fempty_2eproto;
namespace appguard_commands {
class AuthorizationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AuthorizationRequest> _instance;
} _AuthorizationRequest_default_instance_;
class AuthenticationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Authentication> _instance;
} _Authentication_default_instance_;
class ClientMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientMessage> _instance;
  const ::appguard_commands::AuthorizationRequest* authorization_request_;
  const ::appguard_commands::Authentication* authentication_;
} _ClientMessage_default_instance_;
class AuthenticationDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AuthenticationData> _instance;
} _AuthenticationData_default_instance_;
class ServerMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerMessage> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr update_token_command_;
  const ::appguard_commands::FirewallDefaults* set_firewall_defaults_;
  const PROTOBUF_NAMESPACE_ID::Empty* heartbeat_;
  const ::appguard_commands::AuthenticationData* device_authorized_;
  const PROTOBUF_NAMESPACE_ID::Empty* device_deauthorized_;
  const PROTOBUF_NAMESPACE_ID::Empty* authorization_rejected_;
} _ServerMessage_default_instance_;
class FirewallDefaultsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FirewallDefaults> _instance;
} _FirewallDefaults_default_instance_;
}  // namespace appguard_commands
static void InitDefaultsscc_info_Authentication_commands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::appguard_commands::_Authentication_default_instance_;
    new (ptr) ::appguard_commands::Authentication();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::appguard_commands::Authentication::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Authentication_commands_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Authentication_commands_2eproto}, {}};

static void InitDefaultsscc_info_AuthenticationData_commands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::appguard_commands::_AuthenticationData_default_instance_;
    new (ptr) ::appguard_commands::AuthenticationData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::appguard_commands::AuthenticationData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthenticationData_commands_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AuthenticationData_commands_2eproto}, {}};

static void InitDefaultsscc_info_AuthorizationRequest_commands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::appguard_commands::_AuthorizationRequest_default_instance_;
    new (ptr) ::appguard_commands::AuthorizationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::appguard_commands::AuthorizationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthorizationRequest_commands_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AuthorizationRequest_commands_2eproto}, {}};

static void InitDefaultsscc_info_ClientMessage_commands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::appguard_commands::_ClientMessage_default_instance_;
    new (ptr) ::appguard_commands::ClientMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::appguard_commands::ClientMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ClientMessage_commands_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ClientMessage_commands_2eproto}, {
      &scc_info_AuthorizationRequest_commands_2eproto.base,
      &scc_info_Authentication_commands_2eproto.base,}};

static void InitDefaultsscc_info_FirewallDefaults_commands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::appguard_commands::_FirewallDefaults_default_instance_;
    new (ptr) ::appguard_commands::FirewallDefaults();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::appguard_commands::FirewallDefaults::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FirewallDefaults_commands_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FirewallDefaults_commands_2eproto}, {}};

static void InitDefaultsscc_info_ServerMessage_commands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::appguard_commands::_ServerMessage_default_instance_;
    new (ptr) ::appguard_commands::ServerMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::appguard_commands::ServerMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ServerMessage_commands_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ServerMessage_commands_2eproto}, {
      &scc_info_FirewallDefaults_commands_2eproto.base,
      &scc_info_Empty_google_2fprotobuf_2fempty_2eproto.base,
      &scc_info_AuthenticationData_commands_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_commands_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_commands_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_commands_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_commands_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::appguard_commands::AuthorizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::appguard_commands::AuthorizationRequest, uuid_),
  PROTOBUF_FIELD_OFFSET(::appguard_commands::AuthorizationRequest, code_),
  PROTOBUF_FIELD_OFFSET(::appguard_commands::AuthorizationRequest, category_),
  PROTOBUF_FIELD_OFFSET(::appguard_commands::AuthorizationRequest, type_),
  PROTOBUF_FIELD_OFFSET(::appguard_commands::AuthorizationRequest, target_os_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::appguard_commands::Authentication, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::appguard_commands::Authentication, app_id_),
  PROTOBUF_FIELD_OFFSET(::appguard_commands::Authentication, app_secret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::appguard_commands::ClientMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::appguard_commands::ClientMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::appguard_commands::ClientMessageDefaultTypeInternal, authorization_request_),
  offsetof(::appguard_commands::ClientMessageDefaultTypeInternal, authentication_),
  PROTOBUF_FIELD_OFFSET(::appguard_commands::ClientMessage, message_),
  PROTOBUF_FIELD_OFFSET(::appguard_commands::AuthenticationData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::appguard_commands::AuthenticationData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::appguard_commands::AuthenticationData, app_id_),
  PROTOBUF_FIELD_OFFSET(::appguard_commands::AuthenticationData, app_secret_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::appguard_commands::ServerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::appguard_commands::ServerMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::appguard_commands::ServerMessageDefaultTypeInternal, update_token_command_),
  offsetof(::appguard_commands::ServerMessageDefaultTypeInternal, set_firewall_defaults_),
  offsetof(::appguard_commands::ServerMessageDefaultTypeInternal, heartbeat_),
  offsetof(::appguard_commands::ServerMessageDefaultTypeInternal, device_authorized_),
  offsetof(::appguard_commands::ServerMessageDefaultTypeInternal, device_deauthorized_),
  offsetof(::appguard_commands::ServerMessageDefaultTypeInternal, authorization_rejected_),
  PROTOBUF_FIELD_OFFSET(::appguard_commands::ServerMessage, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::appguard_commands::FirewallDefaults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::appguard_commands::FirewallDefaults, timeout_),
  PROTOBUF_FIELD_OFFSET(::appguard_commands::FirewallDefaults, policy_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::appguard_commands::AuthorizationRequest)},
  { 10, -1, sizeof(::appguard_commands::Authentication)},
  { 17, -1, sizeof(::appguard_commands::ClientMessage)},
  { 25, 32, sizeof(::appguard_commands::AuthenticationData)},
  { 34, -1, sizeof(::appguard_commands::ServerMessage)},
  { 46, -1, sizeof(::appguard_commands::FirewallDefaults)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::appguard_commands::_AuthorizationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::appguard_commands::_Authentication_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::appguard_commands::_ClientMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::appguard_commands::_AuthenticationData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::appguard_commands::_ServerMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::appguard_commands::_FirewallDefaults_default_instance_),
};

const char descriptor_table_protodef_commands_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016commands.proto\022\021appguard_commands\032\033goo"
  "gle/protobuf/empty.proto\"e\n\024Authorizatio"
  "nRequest\022\014\n\004uuid\030\001 \001(\t\022\014\n\004code\030\002 \001(\t\022\020\n\010"
  "category\030\003 \001(\t\022\014\n\004type\030\004 \001(\t\022\021\n\ttarget_o"
  "s\030\005 \001(\t\"4\n\016Authentication\022\016\n\006app_id\030\001 \001("
  "\t\022\022\n\napp_secret\030\002 \001(\t\"\241\001\n\rClientMessage\022"
  "H\n\025authorization_request\030\001 \001(\0132\'.appguar"
  "d_commands.AuthorizationRequestH\000\022;\n\016aut"
  "hentication\030\002 \001(\0132!.appguard_commands.Au"
  "thenticationH\000B\t\n\007message\"\\\n\022Authenticat"
  "ionData\022\023\n\006app_id\030\001 \001(\tH\000\210\001\001\022\027\n\napp_secr"
  "et\030\002 \001(\tH\001\210\001\001B\t\n\007_app_idB\r\n\013_app_secret\""
  "\342\002\n\rServerMessage\022\036\n\024update_token_comman"
  "d\030\001 \001(\tH\000\022D\n\025set_firewall_defaults\030\002 \001(\013"
  "2#.appguard_commands.FirewallDefaultsH\000\022"
  "+\n\theartbeat\030\003 \001(\0132\026.google.protobuf.Emp"
  "tyH\000\022B\n\021device_authorized\030\004 \001(\0132%.appgua"
  "rd_commands.AuthenticationDataH\000\0225\n\023devi"
  "ce_deauthorized\030\005 \001(\0132\026.google.protobuf."
  "EmptyH\000\0228\n\026authorization_rejected\030\006 \001(\0132"
  "\026.google.protobuf.EmptyH\000B\t\n\007message\"V\n\020"
  "FirewallDefaults\022\017\n\007timeout\030\001 \001(\r\0221\n\006pol"
  "icy\030\002 \001(\0162!.appguard_commands.FirewallPo"
  "licy*2\n\016FirewallPolicy\022\013\n\007UNKNOWN\020\000\022\t\n\005A"
  "LLOW\020\001\022\010\n\004DENY\020\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_commands_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_commands_2eproto_sccs[6] = {
  &scc_info_Authentication_commands_2eproto.base,
  &scc_info_AuthenticationData_commands_2eproto.base,
  &scc_info_AuthorizationRequest_commands_2eproto.base,
  &scc_info_ClientMessage_commands_2eproto.base,
  &scc_info_FirewallDefaults_commands_2eproto.base,
  &scc_info_ServerMessage_commands_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_commands_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_commands_2eproto = {
  false, false, descriptor_table_protodef_commands_2eproto, "commands.proto", 984,
  &descriptor_table_commands_2eproto_once, descriptor_table_commands_2eproto_sccs, descriptor_table_commands_2eproto_deps, 6, 1,
  schemas, file_default_instances, TableStruct_commands_2eproto::offsets,
  file_level_metadata_commands_2eproto, 6, file_level_enum_descriptors_commands_2eproto, file_level_service_descriptors_commands_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_commands_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_commands_2eproto)), true);
namespace appguard_commands {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FirewallPolicy_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_commands_2eproto);
  return file_level_enum_descriptors_commands_2eproto[0];
}
bool FirewallPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AuthorizationRequest::InitAsDefaultInstance() {
}
class AuthorizationRequest::_Internal {
 public:
};

AuthorizationRequest::AuthorizationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:appguard_commands.AuthorizationRequest)
}
AuthorizationRequest::AuthorizationRequest(const AuthorizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_uuid(),
      GetArena());
  }
  code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_code().empty()) {
    code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_code(),
      GetArena());
  }
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_category().empty()) {
    category_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_category(),
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  target_os_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_target_os().empty()) {
    target_os_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_target_os(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:appguard_commands.AuthorizationRequest)
}

void AuthorizationRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AuthorizationRequest_commands_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  target_os_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AuthorizationRequest::~AuthorizationRequest() {
  // @@protoc_insertion_point(destructor:appguard_commands.AuthorizationRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AuthorizationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  target_os_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthorizationRequest::ArenaDtor(void* object) {
  AuthorizationRequest* _this = reinterpret_cast< AuthorizationRequest* >(object);
  (void)_this;
}
void AuthorizationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AuthorizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthorizationRequest& AuthorizationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AuthorizationRequest_commands_2eproto.base);
  return *internal_default_instance();
}


void AuthorizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:appguard_commands.AuthorizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  category_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  target_os_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthorizationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "appguard_commands.AuthorizationRequest.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "appguard_commands.AuthorizationRequest.code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string category = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_category();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "appguard_commands.AuthorizationRequest.category"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "appguard_commands.AuthorizationRequest.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string target_os = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_target_os();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "appguard_commands.AuthorizationRequest.target_os"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AuthorizationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:appguard_commands.AuthorizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "appguard_commands.AuthorizationRequest.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "appguard_commands.AuthorizationRequest.code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_code(), target);
  }

  // string category = 3;
  if (this->category().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_category().data(), static_cast<int>(this->_internal_category().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "appguard_commands.AuthorizationRequest.category");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_category(), target);
  }

  // string type = 4;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "appguard_commands.AuthorizationRequest.type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_type(), target);
  }

  // string target_os = 5;
  if (this->target_os().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_os().data(), static_cast<int>(this->_internal_target_os().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "appguard_commands.AuthorizationRequest.target_os");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_target_os(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:appguard_commands.AuthorizationRequest)
  return target;
}

size_t AuthorizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:appguard_commands.AuthorizationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // string category = 3;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_category());
  }

  // string type = 4;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string target_os = 5;
  if (this->target_os().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_os());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthorizationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:appguard_commands.AuthorizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthorizationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AuthorizationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:appguard_commands.AuthorizationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:appguard_commands.AuthorizationRequest)
    MergeFrom(*source);
  }
}

void AuthorizationRequest::MergeFrom(const AuthorizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:appguard_commands.AuthorizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.code().size() > 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.category().size() > 0) {
    _internal_set_category(from._internal_category());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.target_os().size() > 0) {
    _internal_set_target_os(from._internal_target_os());
  }
}

void AuthorizationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:appguard_commands.AuthorizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthorizationRequest::CopyFrom(const AuthorizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:appguard_commands.AuthorizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthorizationRequest::IsInitialized() const {
  return true;
}

void AuthorizationRequest::InternalSwap(AuthorizationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_.Swap(&other->code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  category_.Swap(&other->category_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  target_os_.Swap(&other->target_os_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthorizationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Authentication::InitAsDefaultInstance() {
}
class Authentication::_Internal {
 public:
};

Authentication::Authentication(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:appguard_commands.Authentication)
}
Authentication::Authentication(const Authentication& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_app_id().empty()) {
    app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_app_id(),
      GetArena());
  }
  app_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_app_secret().empty()) {
    app_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_app_secret(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:appguard_commands.Authentication)
}

void Authentication::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Authentication_commands_2eproto.base);
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Authentication::~Authentication() {
  // @@protoc_insertion_point(destructor:appguard_commands.Authentication)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Authentication::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Authentication::ArenaDtor(void* object) {
  Authentication* _this = reinterpret_cast< Authentication* >(object);
  (void)_this;
}
void Authentication::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Authentication::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Authentication& Authentication::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Authentication_commands_2eproto.base);
  return *internal_default_instance();
}


void Authentication::Clear() {
// @@protoc_insertion_point(message_clear_start:appguard_commands.Authentication)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  app_secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Authentication::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "appguard_commands.Authentication.app_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string app_secret = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_app_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "appguard_commands.Authentication.app_secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Authentication::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:appguard_commands.Authentication)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_id = 1;
  if (this->app_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "appguard_commands.Authentication.app_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_app_id(), target);
  }

  // string app_secret = 2;
  if (this->app_secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_secret().data(), static_cast<int>(this->_internal_app_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "appguard_commands.Authentication.app_secret");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_app_secret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:appguard_commands.Authentication)
  return target;
}

size_t Authentication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:appguard_commands.Authentication)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (this->app_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  // string app_secret = 2;
  if (this->app_secret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_secret());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Authentication::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:appguard_commands.Authentication)
  GOOGLE_DCHECK_NE(&from, this);
  const Authentication* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Authentication>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:appguard_commands.Authentication)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:appguard_commands.Authentication)
    MergeFrom(*source);
  }
}

void Authentication::MergeFrom(const Authentication& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:appguard_commands.Authentication)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.app_id().size() > 0) {
    _internal_set_app_id(from._internal_app_id());
  }
  if (from.app_secret().size() > 0) {
    _internal_set_app_secret(from._internal_app_secret());
  }
}

void Authentication::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:appguard_commands.Authentication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Authentication::CopyFrom(const Authentication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:appguard_commands.Authentication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Authentication::IsInitialized() const {
  return true;
}

void Authentication::InternalSwap(Authentication* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  app_id_.Swap(&other->app_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  app_secret_.Swap(&other->app_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Authentication::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientMessage::InitAsDefaultInstance() {
  ::appguard_commands::_ClientMessage_default_instance_.authorization_request_ = const_cast< ::appguard_commands::AuthorizationRequest*>(
      ::appguard_commands::AuthorizationRequest::internal_default_instance());
  ::appguard_commands::_ClientMessage_default_instance_.authentication_ = const_cast< ::appguard_commands::Authentication*>(
      ::appguard_commands::Authentication::internal_default_instance());
}
class ClientMessage::_Internal {
 public:
  static const ::appguard_commands::AuthorizationRequest& authorization_request(const ClientMessage* msg);
  static const ::appguard_commands::Authentication& authentication(const ClientMessage* msg);
};

const ::appguard_commands::AuthorizationRequest&
ClientMessage::_Internal::authorization_request(const ClientMessage* msg) {
  return *msg->message_.authorization_request_;
}
const ::appguard_commands::Authentication&
ClientMessage::_Internal::authentication(const ClientMessage* msg) {
  return *msg->message_.authentication_;
}
void ClientMessage::set_allocated_authorization_request(::appguard_commands::AuthorizationRequest* authorization_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (authorization_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(authorization_request);
    if (message_arena != submessage_arena) {
      authorization_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, authorization_request, submessage_arena);
    }
    set_has_authorization_request();
    message_.authorization_request_ = authorization_request;
  }
  // @@protoc_insertion_point(field_set_allocated:appguard_commands.ClientMessage.authorization_request)
}
void ClientMessage::set_allocated_authentication(::appguard_commands::Authentication* authentication) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (authentication) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(authentication);
    if (message_arena != submessage_arena) {
      authentication = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, authentication, submessage_arena);
    }
    set_has_authentication();
    message_.authentication_ = authentication;
  }
  // @@protoc_insertion_point(field_set_allocated:appguard_commands.ClientMessage.authentication)
}
ClientMessage::ClientMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:appguard_commands.ClientMessage)
}
ClientMessage::ClientMessage(const ClientMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kAuthorizationRequest: {
      _internal_mutable_authorization_request()->::appguard_commands::AuthorizationRequest::MergeFrom(from._internal_authorization_request());
      break;
    }
    case kAuthentication: {
      _internal_mutable_authentication()->::appguard_commands::Authentication::MergeFrom(from._internal_authentication());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:appguard_commands.ClientMessage)
}

void ClientMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientMessage_commands_2eproto.base);
  clear_has_message();
}

ClientMessage::~ClientMessage() {
  // @@protoc_insertion_point(destructor:appguard_commands.ClientMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClientMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_message()) {
    clear_message();
  }
}

void ClientMessage::ArenaDtor(void* object) {
  ClientMessage* _this = reinterpret_cast< ClientMessage* >(object);
  (void)_this;
}
void ClientMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientMessage& ClientMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientMessage_commands_2eproto.base);
  return *internal_default_instance();
}


void ClientMessage::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:appguard_commands.ClientMessage)
  switch (message_case()) {
    case kAuthorizationRequest: {
      if (GetArena() == nullptr) {
        delete message_.authorization_request_;
      }
      break;
    }
    case kAuthentication: {
      if (GetArena() == nullptr) {
        delete message_.authentication_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void ClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:appguard_commands.ClientMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .appguard_commands.AuthorizationRequest authorization_request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authorization_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .appguard_commands.Authentication authentication = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_authentication(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:appguard_commands.ClientMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .appguard_commands.AuthorizationRequest authorization_request = 1;
  if (_internal_has_authorization_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::authorization_request(this), target, stream);
  }

  // .appguard_commands.Authentication authentication = 2;
  if (_internal_has_authentication()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::authentication(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:appguard_commands.ClientMessage)
  return target;
}

size_t ClientMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:appguard_commands.ClientMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_case()) {
    // .appguard_commands.AuthorizationRequest authorization_request = 1;
    case kAuthorizationRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.authorization_request_);
      break;
    }
    // .appguard_commands.Authentication authentication = 2;
    case kAuthentication: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.authentication_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:appguard_commands.ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:appguard_commands.ClientMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:appguard_commands.ClientMessage)
    MergeFrom(*source);
  }
}

void ClientMessage::MergeFrom(const ClientMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:appguard_commands.ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kAuthorizationRequest: {
      _internal_mutable_authorization_request()->::appguard_commands::AuthorizationRequest::MergeFrom(from._internal_authorization_request());
      break;
    }
    case kAuthentication: {
      _internal_mutable_authentication()->::appguard_commands::Authentication::MergeFrom(from._internal_authentication());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void ClientMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:appguard_commands.ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage::CopyFrom(const ClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:appguard_commands.ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage::IsInitialized() const {
  return true;
}

void ClientMessage::InternalSwap(ClientMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AuthenticationData::InitAsDefaultInstance() {
}
class AuthenticationData::_Internal {
 public:
  using HasBits = decltype(std::declval<AuthenticationData>()._has_bits_);
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_app_secret(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AuthenticationData::AuthenticationData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:appguard_commands.AuthenticationData)
}
AuthenticationData::AuthenticationData(const AuthenticationData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_app_id()) {
    app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_app_id(),
      GetArena());
  }
  app_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_app_secret()) {
    app_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_app_secret(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:appguard_commands.AuthenticationData)
}

void AuthenticationData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AuthenticationData_commands_2eproto.base);
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AuthenticationData::~AuthenticationData() {
  // @@protoc_insertion_point(destructor:appguard_commands.AuthenticationData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AuthenticationData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthenticationData::ArenaDtor(void* object) {
  AuthenticationData* _this = reinterpret_cast< AuthenticationData* >(object);
  (void)_this;
}
void AuthenticationData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AuthenticationData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthenticationData& AuthenticationData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AuthenticationData_commands_2eproto.base);
  return *internal_default_instance();
}


void AuthenticationData::Clear() {
// @@protoc_insertion_point(message_clear_start:appguard_commands.AuthenticationData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      app_secret_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticationData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "appguard_commands.AuthenticationData.app_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string app_secret = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_app_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "appguard_commands.AuthenticationData.app_secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AuthenticationData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:appguard_commands.AuthenticationData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_id = 1;
  if (_internal_has_app_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "appguard_commands.AuthenticationData.app_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_app_id(), target);
  }

  // string app_secret = 2;
  if (_internal_has_app_secret()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_secret().data(), static_cast<int>(this->_internal_app_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "appguard_commands.AuthenticationData.app_secret");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_app_secret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:appguard_commands.AuthenticationData)
  return target;
}

size_t AuthenticationData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:appguard_commands.AuthenticationData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // string app_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_app_id());
    }

    // string app_secret = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_app_secret());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticationData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:appguard_commands.AuthenticationData)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticationData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AuthenticationData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:appguard_commands.AuthenticationData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:appguard_commands.AuthenticationData)
    MergeFrom(*source);
  }
}

void AuthenticationData::MergeFrom(const AuthenticationData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:appguard_commands.AuthenticationData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_app_id(from._internal_app_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_app_secret(from._internal_app_secret());
    }
  }
}

void AuthenticationData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:appguard_commands.AuthenticationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticationData::CopyFrom(const AuthenticationData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:appguard_commands.AuthenticationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticationData::IsInitialized() const {
  return true;
}

void AuthenticationData::InternalSwap(AuthenticationData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  app_id_.Swap(&other->app_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  app_secret_.Swap(&other->app_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticationData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerMessage::InitAsDefaultInstance() {
  ::appguard_commands::_ServerMessage_default_instance_.update_token_command_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::appguard_commands::_ServerMessage_default_instance_.set_firewall_defaults_ = const_cast< ::appguard_commands::FirewallDefaults*>(
      ::appguard_commands::FirewallDefaults::internal_default_instance());
  ::appguard_commands::_ServerMessage_default_instance_.heartbeat_ = const_cast< PROTOBUF_NAMESPACE_ID::Empty*>(
      PROTOBUF_NAMESPACE_ID::Empty::internal_default_instance());
  ::appguard_commands::_ServerMessage_default_instance_.device_authorized_ = const_cast< ::appguard_commands::AuthenticationData*>(
      ::appguard_commands::AuthenticationData::internal_default_instance());
  ::appguard_commands::_ServerMessage_default_instance_.device_deauthorized_ = const_cast< PROTOBUF_NAMESPACE_ID::Empty*>(
      PROTOBUF_NAMESPACE_ID::Empty::internal_default_instance());
  ::appguard_commands::_ServerMessage_default_instance_.authorization_rejected_ = const_cast< PROTOBUF_NAMESPACE_ID::Empty*>(
      PROTOBUF_NAMESPACE_ID::Empty::internal_default_instance());
}
class ServerMessage::_Internal {
 public:
  static const ::appguard_commands::FirewallDefaults& set_firewall_defaults(const ServerMessage* msg);
  static const PROTOBUF_NAMESPACE_ID::Empty& heartbeat(const ServerMessage* msg);
  static const ::appguard_commands::AuthenticationData& device_authorized(const ServerMessage* msg);
  static const PROTOBUF_NAMESPACE_ID::Empty& device_deauthorized(const ServerMessage* msg);
  static const PROTOBUF_NAMESPACE_ID::Empty& authorization_rejected(const ServerMessage* msg);
};

const ::appguard_commands::FirewallDefaults&
ServerMessage::_Internal::set_firewall_defaults(const ServerMessage* msg) {
  return *msg->message_.set_firewall_defaults_;
}
const PROTOBUF_NAMESPACE_ID::Empty&
ServerMessage::_Internal::heartbeat(const ServerMessage* msg) {
  return *msg->message_.heartbeat_;
}
const ::appguard_commands::AuthenticationData&
ServerMessage::_Internal::device_authorized(const ServerMessage* msg) {
  return *msg->message_.device_authorized_;
}
const PROTOBUF_NAMESPACE_ID::Empty&
ServerMessage::_Internal::device_deauthorized(const ServerMessage* msg) {
  return *msg->message_.device_deauthorized_;
}
const PROTOBUF_NAMESPACE_ID::Empty&
ServerMessage::_Internal::authorization_rejected(const ServerMessage* msg) {
  return *msg->message_.authorization_rejected_;
}
void ServerMessage::set_allocated_set_firewall_defaults(::appguard_commands::FirewallDefaults* set_firewall_defaults) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (set_firewall_defaults) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(set_firewall_defaults);
    if (message_arena != submessage_arena) {
      set_firewall_defaults = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, set_firewall_defaults, submessage_arena);
    }
    set_has_set_firewall_defaults();
    message_.set_firewall_defaults_ = set_firewall_defaults;
  }
  // @@protoc_insertion_point(field_set_allocated:appguard_commands.ServerMessage.set_firewall_defaults)
}
void ServerMessage::set_allocated_heartbeat(PROTOBUF_NAMESPACE_ID::Empty* heartbeat) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (heartbeat) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(heartbeat)->GetArena();
    if (message_arena != submessage_arena) {
      heartbeat = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, heartbeat, submessage_arena);
    }
    set_has_heartbeat();
    message_.heartbeat_ = heartbeat;
  }
  // @@protoc_insertion_point(field_set_allocated:appguard_commands.ServerMessage.heartbeat)
}
void ServerMessage::clear_heartbeat() {
  if (_internal_has_heartbeat()) {
    if (GetArena() == nullptr) {
      delete message_.heartbeat_;
    }
    clear_has_message();
  }
}
void ServerMessage::set_allocated_device_authorized(::appguard_commands::AuthenticationData* device_authorized) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (device_authorized) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(device_authorized);
    if (message_arena != submessage_arena) {
      device_authorized = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, device_authorized, submessage_arena);
    }
    set_has_device_authorized();
    message_.device_authorized_ = device_authorized;
  }
  // @@protoc_insertion_point(field_set_allocated:appguard_commands.ServerMessage.device_authorized)
}
void ServerMessage::set_allocated_device_deauthorized(PROTOBUF_NAMESPACE_ID::Empty* device_deauthorized) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (device_deauthorized) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(device_deauthorized)->GetArena();
    if (message_arena != submessage_arena) {
      device_deauthorized = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, device_deauthorized, submessage_arena);
    }
    set_has_device_deauthorized();
    message_.device_deauthorized_ = device_deauthorized;
  }
  // @@protoc_insertion_point(field_set_allocated:appguard_commands.ServerMessage.device_deauthorized)
}
void ServerMessage::clear_device_deauthorized() {
  if (_internal_has_device_deauthorized()) {
    if (GetArena() == nullptr) {
      delete message_.device_deauthorized_;
    }
    clear_has_message();
  }
}
void ServerMessage::set_allocated_authorization_rejected(PROTOBUF_NAMESPACE_ID::Empty* authorization_rejected) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (authorization_rejected) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(authorization_rejected)->GetArena();
    if (message_arena != submessage_arena) {
      authorization_rejected = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, authorization_rejected, submessage_arena);
    }
    set_has_authorization_rejected();
    message_.authorization_rejected_ = authorization_rejected;
  }
  // @@protoc_insertion_point(field_set_allocated:appguard_commands.ServerMessage.authorization_rejected)
}
void ServerMessage::clear_authorization_rejected() {
  if (_internal_has_authorization_rejected()) {
    if (GetArena() == nullptr) {
      delete message_.authorization_rejected_;
    }
    clear_has_message();
  }
}
ServerMessage::ServerMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:appguard_commands.ServerMessage)
}
ServerMessage::ServerMessage(const ServerMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kUpdateTokenCommand: {
      _internal_set_update_token_command(from._internal_update_token_command());
      break;
    }
    case kSetFirewallDefaults: {
      _internal_mutable_set_firewall_defaults()->::appguard_commands::FirewallDefaults::MergeFrom(from._internal_set_firewall_defaults());
      break;
    }
    case kHeartbeat: {
      _internal_mutable_heartbeat()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_heartbeat());
      break;
    }
    case kDeviceAuthorized: {
      _internal_mutable_device_authorized()->::appguard_commands::AuthenticationData::MergeFrom(from._internal_device_authorized());
      break;
    }
    case kDeviceDeauthorized: {
      _internal_mutable_device_deauthorized()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_device_deauthorized());
      break;
    }
    case kAuthorizationRejected: {
      _internal_mutable_authorization_rejected()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_authorization_rejected());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:appguard_commands.ServerMessage)
}

void ServerMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServerMessage_commands_2eproto.base);
  clear_has_message();
}

ServerMessage::~ServerMessage() {
  // @@protoc_insertion_point(destructor:appguard_commands.ServerMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_message()) {
    clear_message();
  }
}

void ServerMessage::ArenaDtor(void* object) {
  ServerMessage* _this = reinterpret_cast< ServerMessage* >(object);
  (void)_this;
}
void ServerMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerMessage& ServerMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerMessage_commands_2eproto.base);
  return *internal_default_instance();
}


void ServerMessage::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:appguard_commands.ServerMessage)
  switch (message_case()) {
    case kUpdateTokenCommand: {
      message_.update_token_command_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kSetFirewallDefaults: {
      if (GetArena() == nullptr) {
        delete message_.set_firewall_defaults_;
      }
      break;
    }
    case kHeartbeat: {
      if (GetArena() == nullptr) {
        delete message_.heartbeat_;
      }
      break;
    }
    case kDeviceAuthorized: {
      if (GetArena() == nullptr) {
        delete message_.device_authorized_;
      }
      break;
    }
    case kDeviceDeauthorized: {
      if (GetArena() == nullptr) {
        delete message_.device_deauthorized_;
      }
      break;
    }
    case kAuthorizationRejected: {
      if (GetArena() == nullptr) {
        delete message_.authorization_rejected_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void ServerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:appguard_commands.ServerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string update_token_command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_update_token_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "appguard_commands.ServerMessage.update_token_command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .appguard_commands.FirewallDefaults set_firewall_defaults = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_set_firewall_defaults(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Empty heartbeat = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_heartbeat(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .appguard_commands.AuthenticationData device_authorized = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_device_authorized(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Empty device_deauthorized = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_device_deauthorized(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Empty authorization_rejected = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_authorization_rejected(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:appguard_commands.ServerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string update_token_command = 1;
  if (_internal_has_update_token_command()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_update_token_command().data(), static_cast<int>(this->_internal_update_token_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "appguard_commands.ServerMessage.update_token_command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_update_token_command(), target);
  }

  // .appguard_commands.FirewallDefaults set_firewall_defaults = 2;
  if (_internal_has_set_firewall_defaults()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::set_firewall_defaults(this), target, stream);
  }

  // .google.protobuf.Empty heartbeat = 3;
  if (_internal_has_heartbeat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::heartbeat(this), target, stream);
  }

  // .appguard_commands.AuthenticationData device_authorized = 4;
  if (_internal_has_device_authorized()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::device_authorized(this), target, stream);
  }

  // .google.protobuf.Empty device_deauthorized = 5;
  if (_internal_has_device_deauthorized()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::device_deauthorized(this), target, stream);
  }

  // .google.protobuf.Empty authorization_rejected = 6;
  if (_internal_has_authorization_rejected()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::authorization_rejected(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:appguard_commands.ServerMessage)
  return target;
}

size_t ServerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:appguard_commands.ServerMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_case()) {
    // string update_token_command = 1;
    case kUpdateTokenCommand: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_update_token_command());
      break;
    }
    // .appguard_commands.FirewallDefaults set_firewall_defaults = 2;
    case kSetFirewallDefaults: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.set_firewall_defaults_);
      break;
    }
    // .google.protobuf.Empty heartbeat = 3;
    case kHeartbeat: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.heartbeat_);
      break;
    }
    // .appguard_commands.AuthenticationData device_authorized = 4;
    case kDeviceAuthorized: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.device_authorized_);
      break;
    }
    // .google.protobuf.Empty device_deauthorized = 5;
    case kDeviceDeauthorized: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.device_deauthorized_);
      break;
    }
    // .google.protobuf.Empty authorization_rejected = 6;
    case kAuthorizationRejected: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.authorization_rejected_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:appguard_commands.ServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:appguard_commands.ServerMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:appguard_commands.ServerMessage)
    MergeFrom(*source);
  }
}

void ServerMessage::MergeFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:appguard_commands.ServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kUpdateTokenCommand: {
      _internal_set_update_token_command(from._internal_update_token_command());
      break;
    }
    case kSetFirewallDefaults: {
      _internal_mutable_set_firewall_defaults()->::appguard_commands::FirewallDefaults::MergeFrom(from._internal_set_firewall_defaults());
      break;
    }
    case kHeartbeat: {
      _internal_mutable_heartbeat()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_heartbeat());
      break;
    }
    case kDeviceAuthorized: {
      _internal_mutable_device_authorized()->::appguard_commands::AuthenticationData::MergeFrom(from._internal_device_authorized());
      break;
    }
    case kDeviceDeauthorized: {
      _internal_mutable_device_deauthorized()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_device_deauthorized());
      break;
    }
    case kAuthorizationRejected: {
      _internal_mutable_authorization_rejected()->PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(from._internal_authorization_rejected());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void ServerMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:appguard_commands.ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage::CopyFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:appguard_commands.ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage::IsInitialized() const {
  return true;
}

void ServerMessage::InternalSwap(ServerMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FirewallDefaults::InitAsDefaultInstance() {
}
class FirewallDefaults::_Internal {
 public:
};

FirewallDefaults::FirewallDefaults(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:appguard_commands.FirewallDefaults)
}
FirewallDefaults::FirewallDefaults(const FirewallDefaults& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&timeout_, &from.timeout_,
    static_cast<size_t>(reinterpret_cast<char*>(&policy_) -
    reinterpret_cast<char*>(&timeout_)) + sizeof(policy_));
  // @@protoc_insertion_point(copy_constructor:appguard_commands.FirewallDefaults)
}

void FirewallDefaults::SharedCtor() {
  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&policy_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(policy_));
}

FirewallDefaults::~FirewallDefaults() {
  // @@protoc_insertion_point(destructor:appguard_commands.FirewallDefaults)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FirewallDefaults::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FirewallDefaults::ArenaDtor(void* object) {
  FirewallDefaults* _this = reinterpret_cast< FirewallDefaults* >(object);
  (void)_this;
}
void FirewallDefaults::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FirewallDefaults::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FirewallDefaults& FirewallDefaults::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FirewallDefaults_commands_2eproto.base);
  return *internal_default_instance();
}


void FirewallDefaults::Clear() {
// @@protoc_insertion_point(message_clear_start:appguard_commands.FirewallDefaults)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&policy_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(policy_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FirewallDefaults::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 timeout = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timeout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .appguard_commands.FirewallPolicy policy = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_policy(static_cast<::appguard_commands::FirewallPolicy>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FirewallDefaults::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:appguard_commands.FirewallDefaults)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timeout = 1;
  if (this->timeout() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_timeout(), target);
  }

  // .appguard_commands.FirewallPolicy policy = 2;
  if (this->policy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_policy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:appguard_commands.FirewallDefaults)
  return target;
}

size_t FirewallDefaults::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:appguard_commands.FirewallDefaults)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 timeout = 1;
  if (this->timeout() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_timeout());
  }

  // .appguard_commands.FirewallPolicy policy = 2;
  if (this->policy() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_policy());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FirewallDefaults::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:appguard_commands.FirewallDefaults)
  GOOGLE_DCHECK_NE(&from, this);
  const FirewallDefaults* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FirewallDefaults>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:appguard_commands.FirewallDefaults)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:appguard_commands.FirewallDefaults)
    MergeFrom(*source);
  }
}

void FirewallDefaults::MergeFrom(const FirewallDefaults& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:appguard_commands.FirewallDefaults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timeout() != 0) {
    _internal_set_timeout(from._internal_timeout());
  }
  if (from.policy() != 0) {
    _internal_set_policy(from._internal_policy());
  }
}

void FirewallDefaults::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:appguard_commands.FirewallDefaults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FirewallDefaults::CopyFrom(const FirewallDefaults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:appguard_commands.FirewallDefaults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FirewallDefaults::IsInitialized() const {
  return true;
}

void FirewallDefaults::InternalSwap(FirewallDefaults* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FirewallDefaults, policy_)
      + sizeof(FirewallDefaults::policy_)
      - PROTOBUF_FIELD_OFFSET(FirewallDefaults, timeout_)>(
          reinterpret_cast<char*>(&timeout_),
          reinterpret_cast<char*>(&other->timeout_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FirewallDefaults::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace appguard_commands
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::appguard_commands::AuthorizationRequest* Arena::CreateMaybeMessage< ::appguard_commands::AuthorizationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::appguard_commands::AuthorizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::appguard_commands::Authentication* Arena::CreateMaybeMessage< ::appguard_commands::Authentication >(Arena* arena) {
  return Arena::CreateMessageInternal< ::appguard_commands::Authentication >(arena);
}
template<> PROTOBUF_NOINLINE ::appguard_commands::ClientMessage* Arena::CreateMaybeMessage< ::appguard_commands::ClientMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::appguard_commands::ClientMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::appguard_commands::AuthenticationData* Arena::CreateMaybeMessage< ::appguard_commands::AuthenticationData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::appguard_commands::AuthenticationData >(arena);
}
template<> PROTOBUF_NOINLINE ::appguard_commands::ServerMessage* Arena::CreateMaybeMessage< ::appguard_commands::ServerMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::appguard_commands::ServerMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::appguard_commands::FirewallDefaults* Arena::CreateMaybeMessage< ::appguard_commands::FirewallDefaults >(Arena* arena) {
  return Arena::CreateMessageInternal< ::appguard_commands::FirewallDefaults >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
